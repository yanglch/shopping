<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylc.shopping.common.dal.mybatis.ProductMapper">




    <insert id="insertproduct"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `product`
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                `id`,
            </if>
            <if test="name!=null">
                `name`,
            </if>
            <if test="price!=null">
                `price`,
            </if>
            <if test="count!=null">
                `count`,
            </if>
            <if test="status!=null">
                `status`,
            </if>
            <if test="gmtCreate!=null">
                `gmt_create`,
            </if>
            <if test="gmtUpdate!=null">
                `gmt_update`,
            </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="name!=null">
                #{name},
            </if>
            <if test="price!=null">
                #{price},
            </if>
            <if test="count!=null">
                #{count},
            </if>
            <if test="status!=null">
                #{status},
            </if>
            <if test="gmtCreate!=null">
                #{gmtCreate},
            </if>
            <if test="gmtUpdate!=null">
                #{gmtUpdate},
            </if>
        </trim>
        )
    </insert>




    <update id="updateproduct">
        UPDATE `product`
        SET
        <trim suffixOverrides=",">
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="price != null">
                `price` = #{price},
            </if>
            <if test="count != null">
                `count` = #{count},
            </if>
            <if test="status != null and status!=''">
                `status` = #{status},
            </if>
            <if test="gmtCreate != null">
                `gmt_create` = #{gmtCreate},
            </if>
            <if test="gmtUpdate != null">
                `gmt_update` = #{gmtUpdate},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
            `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `product`
        SET
        <trim suffixOverrides=",">
            <if test="set.name != null and set.name!=''">
                `name` = #{set.name},
            </if>
            <if test="set.price != null">
                `price` = #{set.price},
            </if>
            <if test="set.count != null">
                `count` = #{set.count},
            </if>
            <if test="set.status != null and set.status!=''">
                `status` = #{set.status},
            </if>
            <if test="set.gmtCreate != null">
                `gmt_create` = #{set.gmtCreate},
            </if>
            <if test="set.gmtUpdate != null">
                `gmt_update` = #{set.gmtUpdate},
            </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
            <if test="where.idList != null">
                `id` in
                <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
            <if test="where.nameList != null">
                `name` in
                <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
            <if test="where.priceList != null">
                `price` in
                <foreach collection="where.priceList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test="where.priceSt !=null">
                `price` >= #{where.priceSt} and
            </if>
            <if test="where.priceEd!=null">
                `price` &lt;= #{where.priceEd} and
            </if>
            <if test="where.countList != null">
                `count` in
                <foreach collection="where.countList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test="where.countSt !=null">
                `count` >= #{where.countSt} and
            </if>
            <if test="where.countEd!=null">
                `count` &lt;= #{where.countEd} and
            </if>
            <if test="where.statusList != null">
                `status` in
                <foreach collection="where.statusList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test ="where.fuzzyStatus!=null and where.fuzzyStatus.size()>0">
                (
                <foreach collection="where.fuzzyStatus"  separator="or" item="item">
                    `Status` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyStatus!=null and where.rightFuzzyStatus.size()>0">
                (
                <foreach collection="where.rightFuzzyStatus"  separator="or" item="item">
                    `Status` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
            <if test="where.gmtCreateList != null">
                `gmt_create` in
                <foreach collection="where.gmtCreateList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test="where.gmtCreateSt !=null">
                `gmt_create` >= #{where.gmtCreateSt} and
            </if>
            <if test="where.gmtCreateEd!=null">
                `gmt_create` &lt;= #{where.gmtCreateEd} and
            </if>
            <if test="where.gmtUpdateList != null">
                `gmt_update` in
                <foreach collection="where.gmtUpdateList" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach> and
            </if>
            <if test="where.gmtUpdateSt !=null">
                `gmt_update` >= #{where.gmtUpdateSt} and
            </if>
            <if test="where.gmtUpdateEd!=null">
                `gmt_update` &lt;= #{where.gmtUpdateEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.ylc.shopping.common.dal.dataobject.ProductDO" id="productMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="count" column="count"/>
        <result property="status" column="status"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtUpdate" column="gmt_update"/>
    </resultMap>


    <select id="queryproduct" resultMap="productMap">
        select
        <include refid="baseResult"></include>
        from  `product`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="price != null">
                `price` = #{price} and
            </if>
            <if test="count != null">
                `count` = #{count} and
            </if>
            <if test="status != null and status!=''">
                `status` = #{status} and
            </if>
            <if test="gmtCreate != null">
                `gmt_create` = #{gmtCreate} and
            </if>
            <if test="gmtUpdate != null">
                `gmt_update` = #{gmtUpdate} and
            </if>
            <if test = "(_parameter instanceof com.ylc.shopping.common.dal.dataobject.ProductDO$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="priceList != null">
                    `price` in
                    <foreach collection="priceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="priceSt !=null">
                    `price` >= #{priceSt} and
                </if>
                <if test="priceEd!=null">
                    `price` &lt;= #{priceEd} and
                </if>
                <if test="countList != null">
                    `count` in
                    <foreach collection="countList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="countSt !=null">
                    `count` >= #{countSt} and
                </if>
                <if test="countEd!=null">
                    `count` &lt;= #{countEd} and
                </if>
                <if test="statusList != null">
                    `status` in
                    <foreach collection="statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyStatus!=null and fuzzyStatus.size()>0">
                    (
                    <foreach collection="fuzzyStatus"  separator="or" item="item">
                        `Status` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyStatus!=null and rightFuzzyStatus.size()>0">
                    (
                    <foreach collection="rightFuzzyStatus"  separator="or" item="item">
                        `Status` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="gmtCreateList != null">
                    `gmt_create` in
                    <foreach collection="gmtCreateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="gmtCreateSt !=null">
                    `gmt_create` >= #{gmtCreateSt} and
                </if>
                <if test="gmtCreateEd!=null">
                    `gmt_create` &lt;= #{gmtCreateEd} and
                </if>
                <if test="gmtUpdateList != null">
                    `gmt_update` in
                    <foreach collection="gmtUpdateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="gmtUpdateSt !=null">
                    `gmt_update` >= #{gmtUpdateSt} and
                </if>
                <if test="gmtUpdateEd!=null">
                    `gmt_update` &lt;= #{gmtUpdateEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryproductLimit1" resultMap="productMap">
        select
        <include refid="baseResult"></include>
        from  `product`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="price != null">
                `price` = #{price} and
            </if>
            <if test="count != null">
                `count` = #{count} and
            </if>
            <if test="status != null and status!=''">
                `status` = #{status} and
            </if>
            <if test="gmtCreate != null">
                `gmt_create` = #{gmtCreate} and
            </if>
            <if test="gmtUpdate != null">
                `gmt_update` = #{gmtUpdate} and
            </if>
            <if test = "(_parameter instanceof com.ylc.shopping.common.dal.dataobject.ProductDO$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="priceList != null">
                    `price` in
                    <foreach collection="priceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="priceSt !=null">
                    `price` >= #{priceSt} and
                </if>
                <if test="priceEd!=null">
                    `price` &lt;= #{priceEd} and
                </if>
                <if test="countList != null">
                    `count` in
                    <foreach collection="countList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="countSt !=null">
                    `count` >= #{countSt} and
                </if>
                <if test="countEd!=null">
                    `count` &lt;= #{countEd} and
                </if>
                <if test="statusList != null">
                    `status` in
                    <foreach collection="statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyStatus!=null and fuzzyStatus.size()>0">
                    (
                    <foreach collection="fuzzyStatus"  separator="or" item="item">
                        `Status` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyStatus!=null and rightFuzzyStatus.size()>0">
                    (
                    <foreach collection="rightFuzzyStatus"  separator="or" item="item">
                        `Status` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="gmtCreateList != null">
                    `gmt_create` in
                    <foreach collection="gmtCreateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="gmtCreateSt !=null">
                    `gmt_create` >= #{gmtCreateSt} and
                </if>
                <if test="gmtCreateEd!=null">
                    `gmt_create` &lt;= #{gmtCreateEd} and
                </if>
                <if test="gmtUpdateList != null">
                    `gmt_update` in
                    <foreach collection="gmtUpdateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="gmtUpdateSt !=null">
                    `gmt_update` >= #{gmtUpdateSt} and
                </if>
                <if test="gmtUpdateEd!=null">
                    `gmt_update` &lt;= #{gmtUpdateEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
            `id`,
            `name`,
            `price`,
            `count`,
            `status`,
            `gmt_create`,
            `gmt_update`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.ylc.shopping.common.dal.dataobject.ProductDO$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                        <if test="fetchFields.fetchFields.id==true">
                            `id`,
                        </if>
                        <if test="fetchFields.fetchFields.name==true">
                            `name`,
                        </if>
                        <if test="fetchFields.fetchFields.price==true">
                            `price`,
                        </if>
                        <if test="fetchFields.fetchFields.count==true">
                            `count`,
                        </if>
                        <if test="fetchFields.fetchFields.status==true">
                            `status`,
                        </if>
                        <if test="fetchFields.fetchFields.gmtCreate==true">
                            `gmt_create`,
                        </if>
                        <if test="fetchFields.fetchFields.gmtUpdate==true">
                            `gmt_update`,
                        </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                        <if test="fetchFields.excludeFields.id==null">
                            `id`,
                        </if>
                        <if test="fetchFields.excludeFields.name==null">
                            `name`,
                        </if>
                        <if test="fetchFields.excludeFields.price==null">
                            `price`,
                        </if>
                        <if test="fetchFields.excludeFields.count==null">
                            `count`,
                        </if>
                        <if test="fetchFields.excludeFields.status==null">
                            `status`,
                        </if>
                        <if test="fetchFields.excludeFields.gmtCreate==null">
                            `gmt_create`,
                        </if>
                        <if test="fetchFields.excludeFields.gmtUpdate==null">
                            `gmt_update`,
                        </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                            `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.ylc.shopping.common.dal.dataobject.ProductDO$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>



</mapper>